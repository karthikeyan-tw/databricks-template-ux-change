name: 'Databricks Terraform Destroy'
on:
  push:
    branches:
      - main
  workflow_dispatch: 

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  destroy:
    name: 'Terraform Destroy (Manual)'
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      TF_STATE_KEY: ${{ vars.TF_STATE_KEY }}
      TF_BACKEND_BUCKET: ${{ vars.TF_BACKEND_BUCKET }}
      DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
      DATABRICKS_CLIENT_ID: ${{ vars.DATABRICKS_CLIENT_ID }}
      DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.11.0"
          terraform_wrapper: false

      - name: Terraform destroy workspace level resources
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          sudo chmod +x /usr/local/bin/yq
          yq --version
          bash ./workspace_level_terraform_run.sh destroy
        working-directory: ./workspace_level_resources 
      
      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ env.TF_BACKEND_BUCKET }}" \
            -backend-config="key=${{ env.TF_STATE_KEY }}/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}" \
            -input=false
        working-directory: ./account_level_resources

      - name: Terraform Destroy
        run: |
          terraform destroy -auto-approve -input=false
        working-directory: ./account_level_resources